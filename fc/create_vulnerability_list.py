# -*- coding: utf-8 -*-
import logging
import os
import json
import csv
from datetime import datetime

from aliyunsdkcore.client import AcsClient
from aliyunsdkcore.acs_exception.exceptions import ClientException
from aliyunsdkcore.acs_exception.exceptions import ServerException
from aliyunsdkcore.auth.credentials import RamRoleArnCredential
from aliyunsdksas.request.v20181203.DescribeVulListRequest import DescribeVulListRequest

def handler():
    try:
        logger = logging.getLogger()
        print('hello world')

        ramRoleArnCredentials = RamRoleArnCredential(os.environ['AccessKeyId'], os.environ['AccessKeySecret'], os.environ['RamRoleARN'], os.environ['RoleSession'])

        client = AcsClient(region_id='us-west-1', credential=ramRoleArnCredentials)

        request = DescribeVulListRequest()
        request.set_accept_format('json')
        request.set_Type("cve")
        request.set_PageSize(100)

        response = client.do_action_with_exception(request)

        responseData = json.loads(response)

        vulList = []
        for vul in responseData['VulRecords']:
            object = {
                'InstanceId' : vul['InstanceId'],
                'InstanceName' : vul['InstanceName'],
                'RegionId': vul['RegionId'],
                'OsVersion' :  vul['OsVersion'],
                'Os' : vul['ExtendContentJson']['Os'],
                'Name': vul['Name'],
                'Online' :vul['Online'],
                'AliasName' : vul['AliasName'],
                'Related' :  vul['Related'],
                'Level' : vul['Level'],
                'Necessity' :  vul['Necessity'],
                'CanFix' : vul['CanFix'],
                'Status' : vul['Status'],
                'Uuid' :  vul['Uuid'],
                'Tag' : vul['Tag']
            }
            vulList.append(object)

        vulList = sorted(vulList, key=lambda x: x['Level'])
        filename = 'vulnerability_list_' + str(datetime.utcnow().strftime("%Y-%m-%dT%H:%M:%S")) + '.csv'

        with open(filename, 'w', newline='') as f:
            writer = csv.writer(f)
            writer.writerow((['InstanceId', 'InstanceName', 'RegionId', 'OsVersion','Os', 'Name', 'Online', 'AliasName', 'Related', 'Level', 'Necessity', 'CanFix', 'Status','Uuid', 'Tag']))
            for vul in vulList:
                writer.writerow([vul['InstanceId'], vul['InstanceName'], vul['RegionId'], vul['OsVersion'],vul['Os'], vul['Name'],
                                vul['Online'], vul['AliasName'], vul['Related'], vul['Level'], 
                                vul['Necessity'], vul['CanFix'], vul['Status'],vul['Uuid'], vul['Tag']])

    except ClientException as e:
        print(e)
    except ServerException as e:
        print(e)
    except Exception as e:
        print(e)

handler()